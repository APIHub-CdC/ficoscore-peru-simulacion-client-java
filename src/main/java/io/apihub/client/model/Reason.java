/*
 * FicoScore Perú
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@circulodecredito.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.apihub.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * Razones por las que se generó el score
 */
public class Reason {
  /**
   * Clave de la razón
   */
  @JsonAdapter(ClaveEnum.Adapter.class)
  public enum ClaveEnum {
    A1("A1"),
    
    A3("A3"),
    
    C1("C1"),
    
    C2("C2"),
    
    C4("C4"),
    
    C6("C6"),
    
    C7("C7"),
    
    D2("D2"),
    
    D8("D8"),
    
    E0("E0"),
    
    E1("E1"),
    
    E4("E4"),
    
    F1("F1"),
    
    F7("F7"),
    
    F8("F8"),
    
    G1("G1"),
    
    G2("G2"),
    
    J0("J0"),
    
    K0("K0"),
    
    K2("K2"),
    
    M1("M1"),
    
    M5("M5"),
    
    N3("N3"),
    
    P6("P6"),
    
    P9("P9"),
    
    Q0("Q0"),
    
    R0("R0"),
    
    R2("R2"),
    
    R3("R3"),
    
    SC("SC"),
    
    T0("T0"),
    
    T1("T1"),
    
    T4("T4"),
    
    U7("U7"),
    
    V3("V3"),
    
    Z3("Z3");

    private String value;

    ClaveEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ClaveEnum fromValue(String text) {
      for (ClaveEnum b : ClaveEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ClaveEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ClaveEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ClaveEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return ClaveEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("clave")
  private ClaveEnum clave = null;

  @SerializedName("descripcion")
  private String descripcion = null;

  public Reason clave(ClaveEnum clave) {
    this.clave = clave;
    return this;
  }

   /**
   * Clave de la razón
   * @return clave
  **/
  @ApiModelProperty(required = true, value = "Clave de la razón")
  public ClaveEnum getClave() {
    return clave;
  }

  public void setClave(ClaveEnum clave) {
    this.clave = clave;
  }

  public Reason descripcion(String descripcion) {
    this.descripcion = descripcion;
    return this;
  }

   /**
   * Descripción de la razón
   * @return descripcion
  **/
  @ApiModelProperty(required = true, value = "Descripción de la razón")
  public String getDescripcion() {
    return descripcion;
  }

  public void setDescripcion(String descripcion) {
    this.descripcion = descripcion;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Reason reason = (Reason) o;
    return Objects.equals(this.clave, reason.clave) &&
        Objects.equals(this.descripcion, reason.descripcion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clave, descripcion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Reason {\n");

    sb.append("    clave: ").append(toIndentedString(clave)).append("\n");
    sb.append("    descripcion: ").append(toIndentedString(descripcion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

